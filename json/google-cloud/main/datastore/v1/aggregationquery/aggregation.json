{"id":"datastore\/v1\/aggregationquery\/aggregation","type":"","title":"Google\\Cloud\\Datastore\\V1\\AggregationQuery\\Aggregation","name":"Aggregation","description":"<p>Defines a aggregation that produces a single result.<\/p>\n<p>Generated from protobuf message <code>google.datastore.v1.AggregationQuery.Aggregation<\/code><\/p>\n<p>Extends <a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.11\/src\/Google\/Protobuf\/Internal\/Message.php\" target=\"_blank\">Google\\Protobuf\\Internal\\Message<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Datastore\/src\/V1\/AggregationQuery\/Aggregation.php#L90","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"data","description":"<p>Optional. Data for populating the Message object.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"data.count\n","description":"<p>Count aggregator.<\/p>","types":["<a data-custom-type=\"datastore\/v1\/aggregationquery\/aggregation\/count\">Google\\Cloud\\Datastore\\V1\\AggregationQuery\\Aggregation\\Count<\/a>"],"optional":null,"nullable":null},{"name":"data.alias\n","description":"<p>Optional. Optional name of the property to store the result of the aggregation. If not provided, Datastore will pick a default name following the format <code>property_&lt;incremental_id++&gt;<\/code>. For example: <code>AGGREGATE COUNT_UP_TO(1) AS count_up_to_1, COUNT_UP_TO(2), COUNT_UP_TO(3) AS count_up_to_3, COUNT_UP_TO(4) OVER ( ... );<\/code> becomes: <code>AGGREGATE COUNT_UP_TO(1) AS count_up_to_1, COUNT_UP_TO(2) AS property_1, COUNT_UP_TO(3) AS count_up_to_3, COUNT_UP_TO(4) AS property_2 OVER ( ... );<\/code> Requires: <em> Must be unique across all aggregation aliases. <\/em> Conform to [entity property name][google.datastore.v1.Entity.properties] limitations.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"getCount","type":"instance","name":"getCount","source":"Datastore\/src\/V1\/AggregationQuery\/Aggregation.php#L101","description":"<p>Count aggregator.<\/p>\n<p>Generated from protobuf field <code>.google.datastore.v1.AggregationQuery.Aggregation.Count count = 1;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/v1\/aggregationquery\/aggregation\/count\">Google\\Cloud\\Datastore\\V1\\AggregationQuery\\Aggregation\\Count<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"setCount","type":"instance","name":"setCount","source":"Datastore\/src\/V1\/AggregationQuery\/Aggregation.php#L118","description":"<p>Count aggregator.<\/p>\n<p>Generated from protobuf field <code>.google.datastore.v1.AggregationQuery.Aggregation.Count count = 1;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Count aggregator.<\/p>\n","types":["<a data-custom-type=\"datastore\/v1\/aggregationquery\/aggregation\/count\">Google\\Cloud\\Datastore\\V1\\AggregationQuery\\Aggregation\\Count<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/v1\/aggregationquery\/aggregation\">Google\\Cloud\\Datastore\\V1\\AggregationQuery\\Aggregation<\/a>"],"description":""}]},{"id":"getAlias","type":"instance","name":"getAlias","source":"Datastore\/src\/V1\/AggregationQuery\/Aggregation.php#L158","description":"<p>Optional. Optional name of the property to store the result of the aggregation.<\/p>\n<p>If not provided, Datastore will pick a default name following the format\n<code>property_&lt;incremental_id++&gt;<\/code>. For example:<\/p>\n<pre><code>AGGREGATE\n  COUNT_UP_TO(1) AS count_up_to_1,\n  COUNT_UP_TO(2),\n  COUNT_UP_TO(3) AS count_up_to_3,\n  COUNT_UP_TO(4)\nOVER (\n  ...\n);<\/code><\/pre>\n<p>becomes:<\/p>\n<pre><code>AGGREGATE\n  COUNT_UP_TO(1) AS count_up_to_1,\n  COUNT_UP_TO(2) AS property_1,\n  COUNT_UP_TO(3) AS count_up_to_3,\n  COUNT_UP_TO(4) AS property_2\nOVER (\n  ...\n);<\/code><\/pre>\n<p>Requires:<\/p>\n<ul>\n<li>Must be unique across all aggregation aliases.<\/li>\n<li>Conform to [entity property name][google.datastore.v1.Entity.properties] limitations.<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>string alias = 7 [(.google.api.field_behavior) = OPTIONAL];<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setAlias","type":"instance","name":"setAlias","source":"Datastore\/src\/V1\/AggregationQuery\/Aggregation.php#L196","description":"<p>Optional. Optional name of the property to store the result of the aggregation.<\/p>\n<p>If not provided, Datastore will pick a default name following the format\n<code>property_&lt;incremental_id++&gt;<\/code>. For example:<\/p>\n<pre><code>AGGREGATE\n  COUNT_UP_TO(1) AS count_up_to_1,\n  COUNT_UP_TO(2),\n  COUNT_UP_TO(3) AS count_up_to_3,\n  COUNT_UP_TO(4)\nOVER (\n  ...\n);<\/code><\/pre>\n<p>becomes:<\/p>\n<pre><code>AGGREGATE\n  COUNT_UP_TO(1) AS count_up_to_1,\n  COUNT_UP_TO(2) AS property_1,\n  COUNT_UP_TO(3) AS count_up_to_3,\n  COUNT_UP_TO(4) AS property_2\nOVER (\n  ...\n);<\/code><\/pre>\n<p>Requires:<\/p>\n<ul>\n<li>Must be unique across all aggregation aliases.<\/li>\n<li>Conform to [entity property name][google.datastore.v1.Entity.properties] limitations.<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>string alias = 7 [(.google.api.field_behavior) = OPTIONAL];<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Optional. Optional name of the property to store the result of the aggregation.<\/p>\n<p>If not provided, Datastore will pick a default name following the format\n<code>property_&lt;incremental_id++&gt;<\/code>. For example:<\/p>\n<pre><code>AGGREGATE\n  COUNT_UP_TO(1) AS count_up_to_1,\n  COUNT_UP_TO(2),\n  COUNT_UP_TO(3) AS count_up_to_3,\n  COUNT_UP_TO(4)\nOVER (\n  ...\n);<\/code><\/pre>\n<p>becomes:<\/p>\n<pre><code>AGGREGATE\n  COUNT_UP_TO(1) AS count_up_to_1,\n  COUNT_UP_TO(2) AS property_1,\n  COUNT_UP_TO(3) AS count_up_to_3,\n  COUNT_UP_TO(4) AS property_2\nOVER (\n  ...\n);<\/code><\/pre>\n<p>Requires:<\/p>\n<ul>\n<li>Must be unique across all aggregation aliases.<\/li>\n<li>Conform to [entity property name][google.datastore.v1.Entity.properties] limitations.<\/li>\n<\/ul>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/v1\/aggregationquery\/aggregation\">Google\\Cloud\\Datastore\\V1\\AggregationQuery\\Aggregation<\/a>"],"description":""}]},{"id":"getOperator","type":"instance","name":"getOperator","source":"Datastore\/src\/V1\/AggregationQuery\/Aggregation.php#L207","description":"","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]}]}